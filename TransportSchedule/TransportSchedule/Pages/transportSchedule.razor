@page "/transportSchedule"
@inject HttpClient Http

<style>
    .collapsible {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

    .activebutton {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }


    .contentvisible {
        padding: 0 18px;
        overflow: hidden;
        display: block;
        background-color: #f1f1f1;
    }

    .contenthidden {
        padding: 0 18px;
        overflow: hidden;
        display: none;
        background-color: #f1f1f1;
    }

    .collapsible:after {
        content: '\02795'; /* Unicode character for "plus" sign (+) */
        font-size: 13px;
        color: white;
        float: right;
        margin-left: 5px;
    }

    .activebutton:after{
        content: "\02796"; /* Unicode character for "minus" sign (-) */
        font-size: 13px;
        color: white;
        float: right;
        margin-left: 5px;
    }
</style>
<h3>transportSchedule</h3>

<p> Tranport schedule between tifr and induscrest </p>

@if (schedule == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <button class=@button1class @onclick=@(() => hideContent("button1"))> IndusCrest to Tifr on weekdays</button>
    <div class=@button1contentclass>
        <table class="table">
            <thead>
            <th> Time </th>
            <th> Capacity</th>
            <th> Vehicle</th>
            </thead>
            <tbody>
                @foreach (var trip in schedule)
                    @if (trip.from == "IndusCrest" && trip.day == "weekday")
                    {
                        {
                            <tr>
                                <td>@TimeSpan.Parse(trip.time).ToString()</td>
                                <td>@trip.capacity.ToString()</td>
                                <td>@trip.vehicle</td>
                            </tr>
                        }

                    }
                </tbody>
            </table>
    </div>

    

    }




@code {
    Trip[] schedule;
    private string visible = "contentvisible";
    private string hidden = "contenthidden";

    private string buttoncollapse = "collapsible";
    private string buttonactive = "activebutton";

    string button1contentclass = "contenthidden";
    string button2contentclass = "contenthidden";
    string button3contentclass = "contenthidden";
    string button4contentclass = "contenthidden";

    string button1class = "collapsible";
    string button2class = "collapsible";
    string button3class = "collapsible";
    string button4class = "collapsible";

    protected override async Task OnInitAsync()
    {
        schedule = await Http.GetJsonAsync<Trip[]>("sample-data/transportSchedule.json");
    }

    private string swap(string status)
    {
        if (status == hidden)
        {
            return visible;
        }
        else if(status == visible)
        {
            return hidden;
        }
        else if(status == buttoncollapse)
        {
            return buttonactive;
        }
        else if(status == buttonactive)
        {
            return buttoncollapse;
        }
        return "";
    }

    private void hideContent(string bname)
    {
        if (bname == "button1")
        {
            button1contentclass = swap(button1contentclass);
            button1class = swap(button1class);
        }

    }

}
